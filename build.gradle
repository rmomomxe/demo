plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1' // как в методичке
    id 'io.spring.dependency-management' version '1.1.5'
    id 'nu.studer.jooq' version '8.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21) // методичка требует Java 17
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    jooqGenerator "org.postgresql:postgresql" // важно для генерации Jooq-классов
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jooq {
    version = "3.17.18" // фиксированная версия Jooq
    configurations {
        main {
            generationTool {
                logging = 'WARN'
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = "jdbc:postgresql://localhost:5432/postgres" // настрой под свою БД
                    user = "postgres"
                    password = "12345"
                }
                generator {
                    name = 'org.jooq.codegen.JavaGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        includes = '.*'
                        excludes = '^(Fly|XFly).*'
                        schemata {
                            schema {
                                inputSchema = "purchase" // укажи своё имя схемы, если не edu
                            }
                        }
                    }
                    target {
                        packageName = 'jooqdata'
                        directory = "src/main/java/jooq"
                    }
                    generate {
                        newline = '\\r\\n'
                        javaTimeTypes = true
                        records = true
                        relations = true
                        daos = false
                        deprecated = false
                        instanceFields = true
                    }
                    strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
                }
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}